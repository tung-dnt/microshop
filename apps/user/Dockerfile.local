FROM node:18-alpine as base

# adding apk deps to avoid node-gyp related errors
RUN apk add -f --update --no-cache --virtual .gyp nano bash libc6-compat python3 make g++ \
      && npm install --global turbo \
      && apk del .gyp

RUN npm i --location=global --save-exact pnpm@8.6.11

###################################################################

FROM base as pruned

WORKDIR /app
COPY . .
RUN turbo prune --scope=user --docker

###################################################################

FROM pruned as build

WORKDIR /app/build
COPY --from=pruned /app/out/full .
COPY --from=pruned /app/out/pnpm-lock.yaml .
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

###################################################################

FROM node:18-alpine as run

WORKDIR app
COPY --from=build /app/build .
RUN npm i --location=global --save-exact pnpm@8.6.11

COPY ./scripts ./scripts
RUN chmod -R 744 scripts

CMD pnpm --filter user start:dev