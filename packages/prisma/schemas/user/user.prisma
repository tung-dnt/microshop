generator client {
  provider           = "prisma-client-js"
  previewPermissions = ["fullTextSearch"]
  output             = "../../../../node_modules/@prisma/user"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAddresses {
  id           BigInt  @id @default(autoincrement())
  province     Int
  provinceName String  @map("province_name")
  district     Int
  districtName String  @map("district_name")
  ward         Int
  wardName     String  @map("ward_name")
  detail       String?

  user Users?

  @@map("user_addresses")
}

model Users {
  id          BigInt         @id @default(autoincrement())
  addressId   BigInt         @unique @map("address_id")
  lastName    String         @map("last_name")
  firstName   String         @map("first_name")
  email       String         @unique(map: "index_users_on_email")
  birthday    DateTime?      @db.Date
  tel         String         @unique
  salt        String?
  createdAt   DateTime       @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  deletedAt   DateTime?      @map("deleted_at")
  address     UserAddresses? @relation(fields: [addressId], references: [id])
  userOnRoles UserOnRoles[]

  @@index([deletedAt], map: "index_users_on_deleted_at")
  @@index([addressId], map: "index_users_on_address_id")
  @@map("users")
}

model Roles {
  id                BigInt              @id @default(autoincrement())
  name              String              @unique
  description       String?
  status            Int                 @default(1)
  createdBy         BigInt              @map("created_by")
  updatedBy         BigInt?             @map("updated_by")
  createdAt         DateTime            @map("created_at")
  updatedAt         DateTime?           @updatedAt @map("updated_at")
  userOnRoles       UserOnRoles[]
  roleOnPermissions RoleOnPermissions[]

  @@map("roles")
}

model UserOnRoles {
  id     BigInt @id @default(autoincrement())
  userId BigInt @map("user_id")
  roleId BigInt @map("role_id")

  user Users @relation(fields: [userId], references: [id])
  role Roles @relation(fields: [roleId], references: [id])

  @@map("user_on_roles")
}

model Permissions {
  id            BigInt              @id @default(autoincrement())
  name          String              @unique
  description   String?
  status        Int                 @default(1)
  createdBy     BigInt              @map("created_by")
  updatedBy     BigInt?             @map("updated_by")
  createdAt     DateTime            @map("created_at")
  updatedAt     DateTime?           @updatedAt @map("updated_at")
  roleOnFeature RoleOnPermissions[]

  @@map("permissions")
}

model RoleOnPermissions {
  id           BigInt @id @default(autoincrement())
  roleId       BigInt @map("role_id")
  permissionId BigInt @map("permission_id")

  role       Roles       @relation(fields: [roleId], references: [id])
  permission Permissions @relation(fields: [permissionId], references: [id])

  @@map("role_on_permissions")
}
