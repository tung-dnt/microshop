version: "3"
name: microshop
services:
  gateway:
    # The :watch image restarts the service automatically when the configuration files change.
    # Do not use this image in production, it's meant to speed up your testing and development.
    image: devopsfaith/krakend:watch
    container_name: gateway
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "1234:1234"
      - "9008:8080"
      - "8090:8090"
    command: ["run", "-d", "-c", "/etc/krakend/gateway.json"]
    healthcheck:
      test: ["CMD", "wget", "-f", "http://localhost:8080/__health"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    container_name: nginx
    image: nginx:1.17-alpine
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"

  web:
    container_name: web
    build:
      context: ./
      dockerfile: apps/ui/Dockerfile.local
    volumes:
      - ./apps/ui:/app/apps/ui
      - ./packages:/app/packages
      - /app/node_modules

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.0
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak_db
      - KC_DB_URL_DATABASE=auth
      - KC_DB_PASSWORD=password
      - KC_DB_USERNAME=root
      - KC_DB_SCHEMA=public
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - REGISTER_URL=http://user:5000/api/users/register
    command: ["start-dev"]
    ports:
      - "8080:8080"
    volumes:
      - ./config/keycloak:/opt/keycloak/providers

  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.2-ubuntu
    restart: unless-stopped
    user: "0"
    #    environment:
    #      - GF_SERVER_ROOT_URL=http://my.grafana.server/
    #      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - admin_data:/var/lib/grafana
    ports:
      - "8800:3000"

  user:
    container_name: user
    build:
      context: ./
      dockerfile: apps/user/Dockerfile.local
    volumes:
      - ./apps/user:/app/apps/user
      - ./packages:/app/packages
      - /app/node_modules
      - ./env:/app/env
    depends_on:
      - user_db

  user_db:
    container_name: user_db
    image: postgres:15.1-alpine
    volumes:
      - pg_data:/var/lib/postgres/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    ports:
      - "5433:5432"

  keycloak_db:
    container_name: keycloak_db
    image: postgres:15.1-alpine
    volumes:
      - keycloak_data:/var/lib/postgres/data
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    ports:
      - "5434:5432"

volumes:
  pg_data:
  admin_data:
  keycloak_data:
